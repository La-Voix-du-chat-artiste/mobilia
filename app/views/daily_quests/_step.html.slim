- daily_quest = step.mission.daily_quest

.step.handle.border-2.dark:border-gray-600.rounded-lg.p-2.hover:bg-gray-100.transition-all.hover:border-green-500.hover:dark:bg-slate-700/75.relative.dark:bg-slate-700/50.dark:text-white.place-self-start.w-full data-step-path=daily_quest_mission_step_path(daily_quest, step.mission, step) id=dom_id(step, 'mission') class=colour_for_step(step) class=('animate-pulse' if defined?(pending_placement) && pending_placement) class=('opacity-25 hover:opacity-100' if step.achieved?)
  header.flex.items-start.justify-between.mb-2
    .flex.items-center.gap-2
      = render 'daily_quests/steps/label', step: step

      - if current_user && allowed_to?(:optimize?, step, namespace: DailyQuests, context: { daily_quest: daily_quest })
        = link_to 'Placer',
                  optimize_daily_quest_step_path(daily_quest, step),
                  class: 'btn-add !font-light !text-xs !px-2 !py-1',
                  data: { turbo_method: :post, turbo_confirm: 'Voulez-vous placer automatiquement cette mission ?' }

    - if current_user && allowed_to?(:destroy?, step, namespace: DailyQuests, context: { daily_quest: daily_quest })
      = link_to 'X',
                daily_quest_step_path(daily_quest, step),
                data: { turbo_method: :delete, turbo_confirm: "Voulez-vous retirer cette mission pour la journ√©e du #{l(daily_quest.started_on, format: :complete_slash)} ?" },
                class: 'btn-destroy !text-xs !px-2 !py-1'

  details open=!step.achieved?
    summary.text-sm class=(step.achieved? || current_user.standard? ? 'cursor-pointer' : 'cursor-move')
      .text-center
        .flex.items-center.justify-center.gap-2.mb-2
          p.panel-success= step.started_at ? l(step.started_at.round, format: '%Hh%M') : "XXX"
          | >>
          p.panel-success= step.arrival_at ? l(step.arrival_at.round, format: '%Hh%M') : "XXX"
        span.font-bold= step.title

    hr.border.border-gray-300.my-3.dark:border-gray-700

    .mb-3
      = render 'daily_quests/steps/metadata', step: step

    - if current_user && allowed_to?(:update?, step, namespace: DailyQuests::Missions, context: { daily_quest: daily_quest })
      = simple_form_for [daily_quest, step.mission, step], html: { class: 'mb-3' } do |f|
        - scope = company.transporters.with_attached_photo.includes(:absences, :address).reject { |t| t.off?(daily_quest.started_on) }
        = f.association :transporter,
                        collection: transporters_select_options(scope),
                        include_blank: 'Assigner un chauffeur',
                        input_html: { \
                          class: 'w-full', \
                          data: { \
                            controller: 'slim-select', \
                            slim_select_only_desktop_value: true, \
                            slim_select_show_search_value: false, \
                            action: 'change->slim-select#submit' \
                          } \
                        },
                        label_html: { class: 'text-sm' },
                        wrapper_html: { class: 'w-full' }

    - if step.achieved?
      .panel-success.text-center.cursor-help class="!text-xs" title="D√©termin√© algorithmiquement"
        | Mission termin√©e üéâ
    - else
      - if current_user && allowed_to?(:update?, step, namespace: DailyQuests, context: { daily_quest: daily_quest })
        = turbo_frame_tag dom_id(step) do
          = link_to 'Ajouter une remarque', edit_daily_quest_step_path(step.mission.daily_quest, step), class: 'underline text-sm'

    - if step.conflict?
      p.mt-2.text-center.panel-warning
        | ‚ö†Ô∏è Trajet en conflit
    - elsif step.impossible?
      p.mt-2.text-center.panel-error
        | ‚ö†Ô∏è Trajet impossible
