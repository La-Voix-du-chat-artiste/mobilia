= turbo_stream_from [company, :steps]

header.mb-3
  .flex.flex-col.lg:flex-row.items-center.justify-between.gap-3.mb-3
    .flex.flex-row.items-center.gap-3.mb-1
      h1.text-3xl Missions #{l(@daily_quest.started_on, format: '%A')}
      = date_field( \
        'planning', 'date', \
        type: 'date', \
        value: params[:date].presence || Date.current, \
        data: { controller: :planning, action: 'change->planning#moveToDate' }, \
        class: 'date cursor-pointer' \
      )

    = render 'navigate_planning_days' do
      = render 'menu', daily_quest: @daily_quest

= render 'instructions' unless current_user.standard?

- if @transporters.any?(&:no_vehicle?)
  .panel-warning.mb-3
    p.font-bold.mb-1 ⚠️ Chauffeurs sans véhicule
    p.mb-2 Certains chauffeurs n'ont pas de véhicule de configuré. Vous ne pourrez pas leur assigner de missions sans véhicule

    ul.list-disc.list-inside
      - @transporters.select(&:no_vehicle?).each do |transporter|
        li= link_to transporter.full_name, transporter_path(transporter)

- absent = false
- @transporters.each do |transporter|
  - if transporter.current_absence(@daily_quest.started_on)
    - absent = true

- if absent
  .panel-warning.mb-3
    p.font-bold.mb-1 Chauffeurs absents aujourd'hui

    ul.list-disc.list-inside
      - @transporters.each do |transporter|
        - current_absence = transporter.current_absence(@daily_quest.started_on)
        - if current_absence
          li
            = link_to transporter.full_name, transporter_path(transporter), class: 'underline'
            span.rounded.px-1.py-1.bg-yellow-500.text-white.rounded-lg.text-sm.ml-2.mb-1.inline-block
              = current_absence.human_reason
            - if current_absence.started_on != current_absence.ended_on
              span.ml-2.text-xs
                | (jusqu'au
                =< l(current_absence.ended_on, format: :complete_slash)
                | )


.w-full data-controller=('sortable' unless current_user.standard?)
  - unless current_user.standard?
    .border-2.border-dashed.border-yellow-600.p-2.rounded-lg.mb-6
      .flex.flex-col.lg:flex-row.items-center.justify-between.gap-2.bg-yellow-600.text-white.rounded-lg.p-3
        p ⚠️ Missions sans chauffeur

        - if allowed_to?(:optimize?, @daily_quest)
          = link_to 'Tout placer sur le planning', optimize_daily_quest_path(@daily_quest), class: 'btn-edit', data: { turbo_method: :post, turbo_confirm: 'Voulez-vous placer automatiquement toutes les missions ?' }

      - steps = @daily_quest.steps.single

      - if @daily_quest.steps.any? && steps.empty?
        p.panel-success.mt-2
          | Félicitations, vous avez assigné toutes les missions en attente !
      - elsif @daily_quest.steps.blank?
        .mt-2
          = render 'daily_quests/missions/empty_missions', daily_quest: @daily_quest

      .sortable_steps.grid.grid-cols-1.md:grid-cols-2.lg:grid-cols-3.xl:grid-cols-5.gap-3.mt-2.content-start class="min-h-[300px]" id="backlog"
        - steps.includes(:transporter, mission: :daily_quest).each do |step|
          = render 'step', step: step

  .flex.flex-col.lg:flex-row.justify-between.gap-3.flex-nowrap.overflow-x-auto.pb-3
    - transporters_count = 0
    - @transporters.each do |transporter|
      - transporters_count += 1 unless transporter.off?(@daily_quest.started_on)

      - if options.big_screen_planning_show_all_transporters?
        // Force these class to be generated by Tailwind
        - "2xl:w-[16%] 2xl:w-[20%] 2xl:w-[25%] 2xl:w-[33%] 2xl:w-[50%]"
        - @percentage = 100 / transporters_count

    - @transporters.each do |transporter|
      - next if transporter.off?(@daily_quest.started_on)

      = render 'transporter_column', daily_quest: @daily_quest, transporter: transporter, percentage: @percentage
