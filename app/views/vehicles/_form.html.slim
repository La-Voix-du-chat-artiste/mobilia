= simple_form_for(@vehicle) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
  - if f.object.errors.any?
    ul.list-disc.list-inside.panel-error.mb-6
      - f.object.errors.full_messages.each do |message|
        li= message

  .flex.flex-col.lg:flex-row.justify-between.gap-3.mb-6
    = f.input :name, wrapper_html: { class: 'w-full' }
    = f.input :number_plate, wrapper_html: { class: 'w-full' }
    = f.input :status,
              collection: select_options_for(Vehicle, :statuses),
              include_blank: false,
              wrapper_html: { class: 'w-full' }

  .flex.flex-col.lg:flex-row.justify-between.gap-3.mb-6
    = f.input :length, wrapper_html: { class: 'w-full' }
    = f.input :width, wrapper_html: { class: 'w-full' }
    = f.input :height, wrapper_html: { class: 'w-full' }

  .flex.flex-col.lg:flex-row.justify-between.gap-3.mb-6
    = f.input :max_regular_seats, wrapper_html: { class: 'w-full' }
    = f.input :max_wheelchair_seats, wrapper_html: { class: 'w-full' }

  .flex.flex-col.lg:flex-row.justify-between.gap-3.mb-6
    = f.input :details, as: :rich_text_area,
              wrapper_html: { class: 'w-full' }

    - if options.enable_vehicle_photo?
      div
        = f.input :photo, as: :file

        - if f.object.photo.attached?
          p.mt-3.text-center= image_tag url_for(f.object.photo), class: 'w-32 rounded-full object-cover'

  = f.input :substitution, as: :boolean, wrapper_html: { class: 'mb-6' }
  = f.input :enabled, as: :boolean, wrapper_html: { class: 'mb-6' }

  .flex.items-center.gap-3
    = f.button :submit

    - if @vehicle.new_record?
      = f.button :button, 'Valider et créer un nouveau véhicule >>', type: :submit, name: :mode, value: 'save_and_create_new'
